=encoding utf8

=head1 NAZWA

Mojolicious::Guides::Cheatsheet - Przegląd 

=head1 STRESZCZENIE

Dokument zawiera zwięzły, uniwersalny przegląd.

=head1 ZAREZERWOWANE WARTOŚCI UKRYTE

Oprócz wszystkiego poprzedzonego C<mojo.>, istnieje kilka ukrytych wartości, które są zarezerwowane dla routera i renderera.

=head2 C<action>

  $r->route('/welcome')->to(action => 'hello');

Akcja do której przesyłamy.

=head2 C<app>

  $r->route('/welcome')->to(app => MyApp->new);

Wbudowana aplikacja do której wysyłamy.

=head2 C<cb>

  $r->route('/welcome')->to(cb => sub {...});

Wywołanie zwrotne do którego wysyłamy.

=head2 C<class>

  $r->route('/welcome')->to(class => 'Greeting');

Odpowiednik C<controller> w StyluWielbłądzim.


=head2 C<controller>

  $r->route('/welcome')->to(controller => 'greetings');

Kontroler do którego wysyłamy.

=head2 C<data>

  $self->render(data => 'raw bytes');

Zmień nieprzetworzone bity w odpowiedź.

=head2 C<extends>

  $self->render(extends => 'template');

Szablon do rozszerzenia.

=head2 C<format>

  $self->render(format => 'rss');

Format do renderowania.

=head2 C<handler>

  $self->render(handler => 'ep');

Uchwyt, który ma być użyty do renderingu.

=head2 C<inline>

  $self->render(inline => '<%= 1 + 1%>');

Szablon inline do renderowania.

=head2 C<json>

  $self->render(json => {foo => 23});

Zmienia strukturę Perla w odpowiedź JSON.

=head2 C<layout>

  $self->render(layout => 'green');

Układ do renderowania.

=head2 C<method>

  $r->route('/welcome')->to(method => 'hello');

Alternatywa dla C<action>.

=head2 C<namespace>

  $r->route('/welcome')->to(namespace => 'TestApp', method => 'lulz');

Przestrzeń nazw do wysłania.

=head2 C<partial>

  my $result = $self->render(partial => 1);

Zwraca wynik renderowania, zamiast przesyłania go. 

=head2 C<path>

  $r->route('/welcome')->to(path => '/test', app => MyApp->new);

Podstawowa ścieżka do wysyłania do wbudowanych aplikacji.

=head2 C<status>

  $self->render(status => 404);

Status używany dla renderowanej odpowiedzi.

=head2 C<template>

  $self->render(template => 'bye');

Szablon do renderowania.

=head2 C<text>

  $self->render(text => 'Hello World!');

Zmienia znaki w odpowiedź.

=head1 ZMIENNE ŚRODOWISKOWE

Wiele elementów L<Mojolicious> może być dostosowywanych przy użyciu zmiennych środowiskowych. Zmienne związane ze środowiskiem debuggera nie zostały opisany, bowiem są przeznaczone do użycia tylko przez developerów. 


=head2 C<MOJO_APP>

Wybiera która z aplikacji, L<Mojolicious> czy L<Mojo> zostanie użyta. Zawsze powinna zawierać nazwę klasy, jak C<MyApp>, zwykle domyślnie L<Mojo::HelloWorld>.

  MOJO_APP=MyApp

=head2 C<MOJO_CA_FILE>

Ścieżka do pliku autoryzacji TLS CA, zawsze powinno zawierać ścieżkę, np.
C</etc/tls/cacerts.pem>.
Uwaga: L<IO::Socket::SSL> musi być zainstalowane do obsługi TLS.

  MOJO_CA_FILE=/etc/tls/cacerts.pem

=head2 C<MOJO_CERT_FILE>

Ścieżka do certyfikatu TLS, zawsze powinno zawierać ścieżkę, np.
C</etc/tls/client.crt>.
Uwaga: L<IO::Socket::SSL> musi być zainstalowane do obsługi TLS.

  MOJO_CERT_FILE=/etc/tls/client.crt

=head2 C<MOJO_CHUNK_SIZE>

Rozmiar bufora używany dla operacji I/O w bajtach. Większy bufor przyspiesza operacje, ale zużywa pamięć. Domyślnie C<131072>.

  MOJO_CHUNK_SIZE=1024

=head2 C<MOJO_CONFIG>

Plik konfiguracyjny używany przez L<Mojolicious::Plugin::Config> i
L<Mojolicious::Plugin::JSONConfig>, bardzo przydatne przy testowaniu.

   MOJO_CONFIG=myapp.conf

=head2 C<MOJO_HOME>

Katalog domowy dla aplikacji L<Mojolicious>. Powinien zawsze zawierać ścieżkę, na przykład C</home/sri/myapp>.

  MOJO_HOME=/home/sri/myapp

=head2 C<MOJO_IOWATCHER>

Alternatywna implementacja L<Mojo::IOWatcher>.

  MOJO_IOWATCHER=Mojo::IOWatcher::EV

=head2 C<MOJO_KEY_FILE>

Ścieżka do klucza TLS, powinna zawsze zawierać ścieżkę, na przykład
C</etc/tls/client.key>.
Uwaga: L<IO::Socket::SSL> musi być zainstalowany do obsługi TLS.

  MOJO_KEY_FILE=/etc/tls/client.key

=head2 C<MOJO_LOG_LEVEL>

Poziom raportowania błędów dla L<Mojolicious>, na przykład C<debug> lub C<error>.

  MOJO_LOG_LEVEL=debug
  MOJO_LOG_LEVEL=error

=head2 C<MOJO_MAX_LEFTOVER_SIZE>

Maksymalny rozmiar bufora dla pipelinowych zapytań HTTP, w bajtach, domyślnie C<262144>.

  MOJO_MAX_LEFTOVER_SIZE=2048

=head2 C<MOJO_MAX_LINE_SIZE>

Maksymalna długość linii dla nagłówków HTTP, w bajtach, domyślnie C<10240>.

  MOJO_MAX_LINE_SIZE=2048

=head2 C<MOJO_MAX_MEMORY_SIZE>

Maksymalny rozmiar (w bajtach) treści HTTP trzymanej w pamięci. Większe treści będą zapisywane do plików tymczasowych. Domyślnie C<262144>.

  MOJO_MAX_MEMORY_SIZE=2048

=head2 C<MOJO_MAX_MESSAGE_SIZE>

Maksymalny rozmiar wiadomości HTTP, w bajtach, domyślnie C<5242880>.

  MOJO_MAX_MESSAGE_SIZE=1024

=head2 C<MOJO_MAX_REDIRECTS>

  MOJO_MAX_REDIRECTS=3

Maksymalna liczba przekierowań, które L<Mojo::UserAgent> wykona, domyślnie C<0>.

=head2 C<MOJO_MAX_WEBSOCKET_SIZE>

Maksymalny rozmiar wiadomości WebSocket, w bajtach, domyślnie C<262144>.

  MOJO_MAX_WEBSOCKET_SIZE=1024

=head2 C<MOJO_MODE>

Tryb uruchomienia dla aplikacji L<Mojolicious>, na przykład C<development> or C<production>.

  MOJO_MODE=development
  MOJO_MODE=production

=head2 C<MOJO_NO_BONJOUR>

Wyłącza obsługę Bonjour.
Uwaga: L<Net::Rendezvous::Publish> musi być zainstalowany do obsługi Bonjour.

  MOJO_NO_BONJOUR=1

=head2 C<MOJO_NO_DETECT>

Wyłącza wykrywanie środowiska produkcyjnego L<Mojolicious>.

  MOJO_NO_DETECT=1

=head2 C<MOJO_NO_IPV6>

Wyłącza obsługę IPv6.
Uwaga: L<IO::Socket::IP> musi być zainstalowany do obsługi IPv6.

  MOJO_NO_IPV6=1

=head2 C<MOJO_NO_TLS>

Wyłącza obsługę TLS. Może to spowodować nieco lepszą wydajność i zmniejszyć zużycie pamięci.
Uwaga: L<IO::Socket::SSL> musi być zainstalowany do obsługi TLS.


  MOJO_NO_TLS=1

=head2 C<MOJO_PROXY>

Włącza automatyczne wykrywanie proxy HTTP i HTTPS w L<Mojo::UserAgent>.
Ze względów bezpieczeństwa domyślnie jest to wyłączone.

  MOJO_PROXY=1

=head2 C<MOJO_REVERSE_PROXY>

Włącza obsługę reverse proxy w aplikacji L<Mojolicious>.
Pozwala to L<Mojolicious> automatycznie pobierać nagłówki C<X-Forwarded-For>, C<X-Forwarded-Host> oraz C<X-Forwarded-HTTPS>.


  MOJO_REVERSE_PROXY=1

=head2 C<MOJO_STATIC_CLASS>

Klasa, której dispatcher statycznych plików L<Mojolicious> ma używać do znajdowania szablonów C<DATA>.
Domyślnie C<main>.

  MOJO_STATIC_CLASS=MyApp

=head2 C<MOJO_TEMPLATE_CLASS>

Klasa, której renderer L<Mojolicious> ma używać do znajdowania szablonów C<DATA>.
Domyślnie C<main>.

  MOJO_TEMPLATE_CLASS=MyApp

=head2 C<MOJO_TMPDIR>

Katalog na pliki tymczasowe (np. duże uploady). Domyślnie używa losowego, zależnego od platformy, katalogu.


  MOJO_TMPDIR=/tmp/mojo

=head1 WIĘCEJ

Zapraszamy do kontynuowania lektury L<Mojolicious::Guides>, lub zajrzenia na Mojolicious wiki L<http://github.com/kraih/mojo/wiki>, które zawiera znacznie więcej ciekawych informacji i przykładów, tworzonych przez wielu autorów.


=cut